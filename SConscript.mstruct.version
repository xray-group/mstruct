import os
import string

Import('env')

def config_h_build(target, source, env):

    config_h_defines = env.Dictionary()

    for a_target, a_source in zip(target, source):
        config_h = open(str(a_target), "w")
        config_h_in = open(str(a_source), "r")
        config_h.write(config_h_in.read() % config_h_defines)
        config_h_in.close()
        config_h.close()

# Targets --------------------------------------------------------------------

chpp = File('./MStruct/config.h')

# If config.h does not exists, build it
if not os.path.isfile(str(chpp.srcnode())):
   env.Command('MStruct/config.h', 'MStruct/config.h.in', config_h_build)

env['libmstruct_includes'] += [chpp]
env['binmstruct_includes'] += [chpp]

# vim: ft=python
